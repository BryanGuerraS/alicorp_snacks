import os
from dotenv import load_dotenv
import streamlit as st
import openai

# Carga de variables
load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

# T√≠tulo de pesta√±a o P√°gina
st.set_page_config(page_title="Alicorp AI-Studio", page_icon="assets/alicorp_logo_corto_32x32.png", layout="wide")

### Funciones de Negocio o m√≥dulos

# Funci√≥n del prompt que genera la descripci√≥n del producto
def generar_descripcion_producto(nombre_producto, ingredientes, beneficios, publico, tono):
    # Llama a la API de OpenAI para generar descripciones de producto.
    try:
        prompt = f"""
        Act√∫a como un copywriter experto para Alicorp, especializado en productos de consumo masivo y snacks saludables.
        Tu tarea es generar tres (3) descripciones de producto creativas y atractivas para un nuevo lanzamiento.

        **Informaci√≥n del Producto:**
        - **Nombre:** {nombre_producto}
        - **Ingredientes Clave:** {ingredientes}
        - **Beneficios Principales:** {beneficios}
        - **P√∫blico Objetivo:** {publico}

        **Requerimientos:**
        1.  El tono de la comunicaci√≥n debe ser: **{tono}**.
        2.  Genera tres variantes distintas:
            - **1. E-commerce:** Una descripci√≥n detallada (1 p√°rrafo), optimizada para SEO, mencionando los ingredientes y beneficios.
            - **2. Redes Sociales - Instagram/Facebook/etc:** Un copy corto y pegadizo (2-3 l√≠neas), con un llamado a la acci√≥n claro y usando emojis relevantes.
            - **3. Campa√±as de Email:** Un texto persuasivo y ligeramente m√°s personal, enfocado en resolver una necesidad del p√∫blico objetivo.
        3.  Formatea la respuesta usando Markdown para que sea f√°cil de leer, con t√≠tulos claros para cada variante.
        """
        
        response = openai.chat.completions.create(
            model="gpt-4o-mini", # M√°s barato de openai
            messages=[
                {"role": "system", "content": "Eres un asistente de marketing de IA para Alicorp."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7, # Un poco de creatividad
            max_tokens=800
        )
        return response.choices[0].message.content

    except Exception as e:
        return f"Error al conectar con la API de OpenAI: {e}"

# Funci√≥n del prompt que analiza el feedback
def analizar_feedback(comentarios):
    # Usa la IA para resumir y analizar comentarios de clientes.
    try:
        prompt = f"""
        Act√∫a como un Analista de Datos especializado en feedback de clientes para Alicorp.
        Tu tarea es analizar el siguiente bloque de comentarios de usuarios sobre un nuevo producto.

        **Comentarios de Usuarios:**
        ---
        {comentarios}
        ---

        **An√°lisis Requerido:**
        Realiza un an√°lisis conciso y presenta los resultados en formato Markdown. Cubre los siguientes puntos:
        1.  **Sentimiento General:** Resume el sentimiento predominante (ej. "Mayormente Positivo", "Mixto con cr√≠ticas constructivas").
        2.  **Temas Positivos Recurrentes:** Lista los 3 aspectos que m√°s gustaron a los clientes (ej. Sabor, Textura, Empaque).
        3.  **√Åreas de Mejora:** Lista las 3 cr√≠ticas o sugerencias m√°s comunes.
        4.  **Cita Destacada:** Extrae una cita textual (positiva o negativa) que resuma bien una opini√≥n popular.
        """
        response = openai.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Eres un asistente de an√°lisis de datos para Alicorp."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3, # Menos creativo
            max_tokens=600
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Error al conectar con la API de OpenAI: {e}"
    
### Interfaz de Usuario | Streamlit
st.image("assets/alicorp_logo_completo.png", width=150)
st.title("üöÄ Alicorp AI-Studio") # h1
st.caption("Una herramienta de IA Generativa para acelerar tus lanzamientos")

tab1, tab2 = st.tabs(["‚úçÔ∏è Generador de Contenido", "üìä Analizador de Feedback"])

with tab1:
    # col1: Men√∫ para ingresar datos
    # col_div: Columna usada como espaciado
    # col2: Men√∫ para mostrar los resultados
    col1, col_div, col2 = st.columns([1, 0.05, 1.5]) 

    with col1:
        st.subheader("1. Ingresa los datos del producto") # h3
        nombre_producto = st.text_input("Nombre del Producto", "Barras de Energ√≠a 'Bryan Boost'")
        ingredientes = st.text_input("Ingredientes Clave", "Quinua, kiwicha, maca")
        beneficios = st.text_area("Beneficios Principales", "Fuente de energ√≠a natural, alto en fibra, sin az√∫car a√±adida, ideal para media ma√±ana.", height=70)
        publico = st.text_area("P√∫blico Objetivo", "J√≥venes profesionales y estudiantes universitarios (20-35 a√±os) que buscan snacks saludables y pr√°cticos.", height=70)
        
        tonos_disponibles = ["Moderno y Energ√©tico", "Confiable y Nutritivo", "Divertido y Juvenil", "Sofisticado y Premium"]
        tono = st.selectbox("Elige el tono de comunicaci√≥n", tonos_disponibles)
        
        if st.button("‚ú® Generar Descripciones"):
            if not all([nombre_producto, ingredientes, beneficios, publico, tono]):
                st.warning("Por favor, completa todos los campos.")
            else:
                with st.spinner("Generando... Alimentamos ideas para un ma√±ana mejor..."):
                    descripcion_generada = generar_descripcion_producto(nombre_producto, ingredientes, beneficios, publico, tono)
                    # Guardamos el resultado en el estado de la sesi√≥n para mostrarlo en la otra columna
                    st.session_state['descripcion_generada'] = descripcion_generada
    with col_div:
        st.markdown(
            """<div style='height: 100%; border-left: 1px solid #ccc;'></div>""",
            unsafe_allow_html=True
        )

    with col2:
        st.subheader("2. Resultados Generados por IA")
        if 'descripcion_generada' in st.session_state:
            st.markdown(st.session_state['descripcion_generada'])
        else:
            st.info("Aqu√≠ aparecer√°n las descripciones generadas por la IA.")

with tab2:
    # col1: Men√∫ para ingresar datos
    # col_div: Columna usada como espaciado
    # col2: Men√∫ para mostrar los resultados

    st.header("üìä An√°lisis de Feedback de Clientes")
    
    # Creamos las dos columnas, manteniendo la proporci√≥n para consistencia
    col1, col_div, col2 = st.columns([1, 0.05, 1.5])

    with col1:
        st.subheader("1. Ingresa los comentarios")
        
        sample_comments = """
        - "Me encant√≥ el sabor de la barra Andean Boost, no es muy dulce y se siente natural. ¬°Perfecta para la oficina!"
        - "La textura es incre√≠ble, crocante pero no dura. El empaque es pr√°ctico pero un poco dif√≠cil de abrir a veces."
        - "Buen producto, aunque me pareci√≥ un poco caro para el tama√±o que tiene. Quiz√°s un pack de 3 ser√≠a mejor."
        - "¬°La mejor barra que he probado! La compr√© en el marketplace y lleg√≥ al d√≠a siguiente. S√∫per recomendada."
        - "El sabor a cacao es muy ligero, me gustar√≠a que fuera m√°s intenso. Por lo dem√°s, todo bien."
        """
        # Aumentamos un poco la altura para que se vea mejor en la columna
        comentarios = st.text_area("Pega los comentarios de tus clientes aqu√≠:", sample_comments, height=350)

        if st.button("üìà Analizar Feedback"):
            if not comentarios.strip(): # Usamos .strip() para evitar que espacios en blanco cuenten como input
                st.warning("Por favor, ingresa algunos comentarios para analizar.")
            else:
                with st.spinner("Analizando opiniones..."):
                    analisis_resultado = analizar_feedback(comentarios)
                    st.session_state['analisis_resultado'] = analisis_resultado
    with col_div:
        st.markdown(
            """<div style='height: 100%; border-left: 1px solid #ccc;'></div>""",
            unsafe_allow_html=True
        )

    with col2:
        st.subheader("2. Resultados del An√°lisis")
        
        if 'analisis_resultado' in st.session_state:
            # Mostramos el resultado que se gener√≥ y guard√≥ desde la columna izquierda
            st.markdown(st.session_state['analisis_resultado'])
        else:
            st.info("Aqu√≠ aparecer√° el an√°lisis generado por la IA.")

# Posibles mejoras
# Almacenar input y output en historial dentro de las carpetas